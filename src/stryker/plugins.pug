extends ../layout/section-layout.pug

block content
    :markdown-it
        Stryker supports a number of plugins, which are listed below. You can also [search npm for the stryker-plugin tag](https://www.npmjs.com/search?q=stryker-plugin). 
        
        Don't worry about the reporters if you're just starting out. The needed plugins will be installed for you if you're following out [quickstart](/stryker/quickstart).

        Missing something? Feel free to create an [issue](https://github.com/stryker-mutator/stryker/issues) or 

        ## Test runners

        * Jasmine ([@stryker-mutator/jasmine-runner](https://github.com/stryker-mutator/stryker/tree/master/packages/jasmine-runner))
        * Jest ([@stryker-mutator/jest-runner](https://github.com/stryker-mutator/stryker/tree/master/packages/jest-runner))
        * Karma ([@stryker-mutator/karma-runner](https://github.com/stryker-mutator/stryker/tree/master/packages/karma-runner))
        * Mocha ([@stryker-mutator/mocha-runner](https://github.com/stryker-mutator/stryker/tree/master/packages/mocha-runner))
        * Web Component Tester ([@stryker-mutator/wct-runner](https://github.com/stryker-mutator/stryker/tree/master/packages/wct-runner))

        ## Test frameworks

        Stryker is test framework agnostic, however if you plugin hooks to the test framework you are using, it can significantly improve the performance
        by using `coverageAnalysis: 'perTest'`. For more information about coverage analysis, see the [stryker readme](https://github.com/stryker-mutator/stryker/tree/master/packages/stryker#coverage-analysis).
                    
        * Jasmine ([@stryker-mutator/jasmine-framework](https://github.com/stryker-mutator/stryker/tree/master/packages/jasmine-framework))
        * Mocha ([@stryker-mutator/mocha-runner](https://github.com/stryker-mutator/stryker/tree/master/packages/mocha-runner))

        ## Reporters
        
        Stryker already has 4 reporters build in:
        * `progress`: Report progress during mutation testing.
        * `dots`: Report progress as dots during mutation testing.
        * `clear-text`: A clear text report at the end of the mutation testing phase.
        * `event-recorder`: Write all events to disk. Useful for debug purposes (default location: 'reports/mutation/events')

        The html reporter can be installed a separate dependency. It can generate [an html report](https://stryker-mutator.io/stryker-html-reporter).
        For more info, see the [@stryker-mutator/html-reporter readme](https://github.com/stryker-mutator/stryker/tree/master/packages/html-reporter#readme)

        ## Mutators
        
        The actual mutating part of your code is done via a mutator plugin. 
        * **JavaScript** ([@stryker-mutator/javascript-mutator](https://github.com/stryker-mutator/stryker/tree/master/packages/javascript-mutator)) \
          Can mutate JavaScript files using babel as a parser. It can also mutate [flow-js](https://flow.org/) code.
        * **TypeScript** ([@stryker-mutator/typescript-mutator](https://github.com/stryker-mutator/stryker/tree/master/packages/typescript)) \
          Can mutate TypeScript files using the TypeScript parser.
        * **Vue** ([@stryker-mutator/vue-mutator](https://github.com/stryker-mutator/stryker/tree/master/packages/vue-mutator)) \
          Can mutate both JavaScript, TypeScript and *.vue files. It falls back on the JavaScript mutator or the TypeScript mutator for the actual mutating.

        ## Config writers
        
        A config writer is a plugin that can rewrite your stryker configuration during initialization.
        It is used by a few packages. We're thinking about deprecating it as it can lead to complicated setups with unexpected results.

        ## \<Your plugin here\>
        You can write your own plugins for Stryker. Interested? Come and have a chat at [our gitter](https://gitter.im/stryker-mutator/stryker).
