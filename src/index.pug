extends ./layout/layout.pug

block docs-header

    .docs-header.jumbotron.jumbotron-fluid
        .container
            .row.d-flex.align-items-center
                .col-md-6.text-center
                    h1.display-1 Stryker
                    p.lead Test your tests with mutation testing.
                .col-md-6.text-center.d-none.d-md-block
                    img(src="/images/strykerman.png", alt="Stryker", class="stryker-img")
                .col-md-6.text-center.d-block.d-md-none.d-lg-none
                    img(src="/images/gun.png", alt="Stryker", class="stryker-img")

block content
    .row
        .col-md-12.text-center
            :markdown-it
                ## Getting started with Stryker
            .row
                a.col-md-4(title="Stryker for JavaScript and friends", href="/stryker/")
                    figure
                        img(src="/images/JavascriptLogo.png", alt="JavaScript", class="stryker-versions-img")
                        figcaption JavaScript and friends
                a.col-md-4(title="Stryker for C#" href="/stryker-net/")
                    figure.preview-ribbon
                        img(src="/images/CSharpLogo.png", alt="C#", class="stryker-versions-img")
                        figcaption C#
                a.col-md-4(title="Stryker for Scala", href="/stryker4s/")
                    figure.preview-ribbon
                        img(src="/images/ScalaLogo.png", alt="Scala", class="stryker-versions-img")
                        figcaption Scala
    .row
        .col-md-12.mt-3
            :markdown-it
                ## What is mutation testing?

                Bugs, or *mutants*, are automatically inserted into your production code. Your tests are ran for each mutant.
                If your tests *fail* then the mutant is *killed*.
                If your tests passed, the mutant *survived*.
                The higher the percentage of mutants killed, the more *effective* your tests are.

                It's really that simple.

                Still confused? Why not taking a look at [our example page](/example) and try it out yourself?
    .row
        .col-md-12
            :markdown-it
                ## But wait, what about code coverage?

                Well... code coverage doesn't really tell you everything about the effectiveness of your tests. Think about it,
                when was the last time you saw a test without an assertion, purely to increase the code coverage?

                Imagine a sandwich covered with paste. Code coverage would tell you the bread is 80% covered with paste. 
                Mutation testing, on the other hand, would tell you it is actually *chocolate* paste and not... well... something else.
    .row
        .col-md-12
            :markdown-it
                ## Meet: Stryker

                Sounds complicated? Don't worry, Stryker has your back. It uses one design mentality to implement mutation testing on 3 platforms.
                It's _easy to use_ and _fast to run_. Stryker will only mutate _your source code_, making sure there are no false positives.
    .row
        .col-md-12
            :markdown-it

                ## An example

                Say you're building an online casino.
                Users can only enter the casino when they're over 18. So you write the following piece of code to check if someone is allowed to use the website:

                ```js
                function isUserOldEnough(user) {
                  return user.age >= 18;
                }
                ```

                Stryker will find the return statement and decide to change it in several ways:
                
                ```js
                /* 1 */ return user.age > 18;
                /* 2 */ return user.age < 18;
                /* 3 */ return false;
                /* 4 */ return true;
                ```

                We call those modifications mutants. After the mutants have been found, they are applied one by one and your tests are executed against them. 
                If at least one of your tests fail, we say the mutant is *killed*. That's what we want! If no test fails, it *survived*. 
                The better your tests, the fewer mutants survive.
    
                Stryker will output the results in various different formats. One of the easiest to read is the clear text reporter:

                ```shell
                  Mutant killed: /yourPath/yourFile.js: line 10:27
                  Mutator: BinaryOperator
                  -                 return user.age >= 18;
                  +                 return user.age > 18;

                  Mutant survived: /yourPath/yourFile.js: line 10:27
                  Mutator: RemoveConditionals
                  -                 return user.age >= 18;
                  +                 return true;
                ```

                The clear text reporter will output how exactly your code was modified and which mutator was used. It will then tell us if a mutant was killed, meaning that at least one test failed, or if it survived. The second mutation in this example is marked as a survivor. This means there is probably a test missing that explicitly tests for age lower than 18.
    .row
        .col-md-12
            :markdown-it
                ## Features
    .row.mt-3
        .col-md-4.col-sm-6
            .row
                .col-md-2.col-2.icon-box
                    i.fa.fa-crosshairs
                .col-md-10.col-10.mt-2
                    h3 Mutations
                    :markdown-it
                        Control [more than 30 supported mutations](/mutators.html), or write your own.
        .col-md-4.col-sm-6
            .row
                .col-md-2.col-2.icon-box
                    i.fa.fa-shipping-fast
                .col-md-10.col-10.mt-2
                    h3 Speed
                    :markdown-it
                        Use code analysis and parallel test runner processes to speed things up.
        .col-md-4.col-sm-6
            .row
                .col-md-2.col-2.icon-box
                    i.fa.fa-globe-americas
                .col-md-10.col-10.mt-2
                    h3 Test runner agnostic
                    :markdown-it
                        Run tests with your favorite test runner.
        .col-md-4.col-sm-6
            .row
                .col-md-2.col-2.icon-box
                    i.fa.fa-users
                .col-md-10.col-10.mt-2
                    h3 Open source
                    :markdown-it
                        Free as in Speech. Maintained by the open source community at
                        [GitHub](http://github.com/stryker-mutator/stryker).
        .col-md-4.col-sm-6
            .row
                .col-md-2.col-2.icon-box
                    i.fa.fa-cogs
                .col-md-10.col-10.mt-2
                    h3 Multilingual
                    :markdown-it
                        Stryker has support for [JavaScript & TypeScript](/stryker/), [C#](/stryker-net/) and [Scala](/stryker4s/)
        .col-md-4.col-sm-6
            .row
                .col-md-2.col-2.icon-box
                    i.fa.fa-chart-bar
                .col-md-10.col-10.mt-2
                    h3 Clever reports
                    :markdown-it
                        Use [clever reports](https://github.com/stryker-mutator/stryker/tree/master/packages/html-reporter#readme)
                        to sniff out surviving mutants and improve test effectiveness.
    
    .row
        .col-md-12.mt-3
            :markdown-it
                ## Info Support

                Stryker is sponsored by [Info Support](https://www.infosupport.com/). They provide our awesome swag, host Stryker hackathons and provide time for their developers to work on Stryker and other open source projects. Check them out at [opensource.infosupport.com](https://opensource.infosupport.com/).

    .row
        .col-md-12
            <blockquote class="blockquote">
                <p class="mb-0">For someone who hates mutants... you certainly keep some strange company.</p>
                <footer class="blockquote-footer">Professor X</footer>
            </blockquote>
            <blockquote class="blockquote">
                <p class="mb-0">Oh, they serve their purpose... as long as they can be controlled.</p>
                <footer class="blockquote-footer">William Stryker</footer>
            </blockquote>
