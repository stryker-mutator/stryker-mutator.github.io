extends ../layout/section-layout.pug

block content
    section.row
        .col-md-12
            :markdown-it
                Welcome to the quick start guide! Use this guide to get 
                started with your first mutation testing run using Stryker.

                This guide covers the following topics:

                * Installation
                * Running mutation tests
                * Changing the configuration

                Let's get started installing Stryker.
    section.row
        .col-md-12
            h2 Installation
            :markdown-it
                Stryker is available as a package on on 
                [NuGet](https://www.nuget.org/). There's two ways in which you 
                can install Stryker:

                * As a global tool
                * As a local tool in your project

                We recommend that projects running .NET Core 3.x use the 
                local tool installation. If you're running .NET Core 2.x you 
                should use the global tool installation.

                Let's start with the global tool installation process.
    section.row
        .col-md-12
            h3 Install as a global tool
            :markdown-it
                Run the following command to install stryker as a global tool.

                ```
                dotnet tool install -g dotnet-stryker
                ```

                Once you've installed stryker as a global tool, it becomes 
                available as a command in your terminal. 

                Note: Global tools are not automatically updated, you have to
                do this yourself. You can update Stryker using the command
                `dotnet tool update -g dotnet-stryker`.

                Let's take a look at the local tool installation next.

            h3 Install as a local tool
            :markdown-it
                While running stryker as a global tool works fine in many cases,
                it can be interesting to run stryker as a local tool.
                
                Starting from .NET Core 3.0 dotnet tools can also be installed 
                on a project level. This has the advantage that you can use a 
                different version of a tool based on the requirements of your 
                project.
                
                To install Stryker as a local tool, follow these steps:

                First, open a new terminal window and navigate to your test 
                project. 

                Then,create a new tools manifest in your test project by 
                executing the following command: 
                
                ```
                dotnet new tool-manifest
                ```

                This will create a new file `tool-manifest.json` which contains 
                information about which tools are used in the project and what 
                version should be used.

                Make sure you commit `tool-manifest.json` to source control, 
                so you can restore the installed tools at a later date using the 
                command `dotnet tool restore`.

                Next, install the Stryker tooling using the command:

                ```
                dotnet tool install dotnet-stryker
                ```

                This adds Stryker to the tool manifest and makes it available 
                in the terminal. 

            hr/
    section.row
        .col-md-12
            h2 Running mutation tests
            :markdown-it
                Once you have Stryker installed, you can start mutation testing.
                Run the following command from the test project folder where
                you want to start mutation testing:

                ```
                dotnet stryker
                ```

                When you run the command, Stryker will perform the following tasks:

                1. First, the test project is built.
                2. Then, a set of mutations is generated for the project that is being tested.
                3. After that, the mutation tests are run based on the list of tests and mutations.

                At the end of the test run, a HTML report is generated. The URL 
                for this is printed to the terminal window.
            hr/
    section.row
        .col-md-12
            h2 Changing the configuration
            :markdown-it
                The default test configuration isn't suitable for all projects.
                Stryker uses the `stryker-config.json` file in the root of the 
                test project to configure the test run. A sample of a 
                configuration file is displayed below:

                ```js
                {
                    "stryker-config":
                    {      
                        "reporters":[
                            "ConsoleProgressBar",
                            "ConsoleReport"
                        ],  
                        "log-level":"info",
                        "timeout-ms":10000,
                        "log-file":true,
                        "project-file":"ExampleProject.csproj",
                        "max-concurrent-test-runners":4,
                        "threshold-high":80,
                        "threshold-low":70,
                        "threshold-break":60,
                        "mutate": [
                            "**/*.cs"
                        ],
                        "excluded-mutations": [
                            "string",
                            "Logical operators"
                        ]
                    }
                }
                ```
                
                Note that this file is entirely optional. It allows you to 
                specify exactly what source files to mutate and what project
                should be mutated during a test run.

                You can also modify how results are reported and when to break 
                the build if insufficient mutations have been killed by your 
                tests.

                Please refer to [the configuration guide](https://github.com/stryker-mutator/stryker-net/blob/master/docs/Configuration.md) 
                for more information on the available configuration options.


                
